--@/home/fulcrum/BSUIR/MDISUBD/LR2/test.sql
--------------------------------------------------------
-- 1. Вставка тестовых данных в таблицы GROUPS и STUDENTS
--------------------------------------------------------

-- Вставляем две группы:
INSERT INTO GROUPS (NAME) VALUES ('Group A');
INSERT INTO GROUPS (NAME) VALUES ('Group B');

-- Вставляем студентов, привязывая их к группам:
INSERT INTO STUDENTS (NAME, GROUP_ID) VALUES ('Alice', 24);
INSERT INTO STUDENTS (NAME, GROUP_ID) VALUES ('Bob', 22);
INSERT INTO STUDENTS (NAME, GROUP_ID) VALUES ('Charlie', 22);

--------------------------------------------------------
-- 2. Проверка первоначального состояния таблиц
--------------------------------------------------------

-- Вывод всех групп:
SELECT * FROM GROUPS;

-- Вывод всех студентов:
SELECT * FROM STUDENTS;

-- Вывод журнала изменений:
SELECT * FROM STUDENTS_LOG;

--------------------------------------------------------
-- 3. Обновление данных: перевод студента из одной группы в другую
--------------------------------------------------------

-- Перевод студента Alice из группы 1 в группу 2:
UPDATE STUDENTS 
   SET GROUP_ID = 24 
 WHERE NAME = 'Alice';

-- Проверяем изменения:
SELECT * FROM GROUPS;
SELECT * FROM STUDENTS;
SELECT * FROM STUDENTS_LOG;

--------------------------------------------------------
-- 4. Проверка уникальности имени группы
--------------------------------------------------------

-- Попытка вставить группу с уже существующим именем (ожидается ошибка):
INSERT INTO GROUPS (NAME) VALUES ('Group B');

--------------------------------------------------------
-- 5. Удаление группы с каскадным удалением студентов
--------------------------------------------------------

-- Удаляем группу 'Group A'. Триггер должен удалить студентов с GROUP_ID = 1:
DELETE FROM GROUPS WHERE NAME = 'Group A';

-- Проверяем, что группа удалена, а студенты из удалённой группы тоже удалены:
SELECT * FROM GROUPS;
SELECT * FROM STUDENTS;
SELECT * FROM STUDENTS_LOG;

--------------------------------------------------------
-- 6. Тест процедуры восстановления данных
--------------------------------------------------------

EXEC RESTORE_STUDENTS(SYSTIMESTAMP - INTERVAL '2' MINUTE, INTERVAL '0' MINUTE);

-- Проверяем восстановленные данные:
SELECT * FROM STUDENTS;
